<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>166, 17</value>
  </metadata>
  <metadata name="ImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>264, 17</value>
  </metadata>
  <data name="ImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAD2
        DAAAAk1TRnQBSQFMAgEBAwEAAXQBAAF0AQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEYBgABDCEAA/4D/Ab5A/wD/kgAAf0B/gH9AcQB6QHGAWsB3AGIATQB2wFuASYB2gFq
        ATwB3QF3AWkB3wGPAaYB4wGvAesB9AHrRQAD/gP8A/QD5QPYA9kD6QP2A/0D/z8AA/wBVwHUAWcBFQHb
        AWsBGgHhAX4BHAHjAYQBHgHlAYsBIAHoAZEBIQHbAZ0BJQHsAZ8BGwHgAXIBiAHcAZAB/QH+Af05AAP/
        A/0D9gHiAeMB5AGRAakBvAFTAZABvAFgAZkBvQGCAZYBpQO5A9QD6wP4A/0D/wMAA/8D/QP7A/kD+gP7
        A/0D/gP/A/4D/QP7BvoD/AP+BgABpgHhAagBDQHSAVMBEQHWAWIBEwHZAWgBFQHbAW8BFwHeAXUBFwHI
        AYcBAwEYAdUBFgGnAaQBIAHnAZABGwHhAXoBrQHiAa02AAP+A/kD6wGkAbYBwwE9AYYBuwEvAZIB1wFL
        Aa0B6QF6AdUB/wFiAb4B7wFOAY0BtwGKAZgBowO9A9kD7wP7A/4D/QPzA+ED2APcA+ID6gPyA/UD8QPp
        A+ED3APdA+sD+wYAAUMBzgFTAQgBzQFHAQkBzwFMAQwB0QFUAQ4B1QFdAQ4B1gFfAQ0BlAGLAhQB6gES
        AbYBiAEZAeABewEbAeIBggFGAdIBWzYAA/sBxwHQAdcBUAGMAbkBNQGXAdkBQwGlAeQBRwGnAeUBUwGz
        AewBZgHEAfQBlwG4AcoBrwHRAeMBWwGyAeMBVQGJAa0BmAGgAacDyAPsA/wB5wHtAecBfAG1AYABVQGj
        AV8BXgGaAWQBdAGjAXoBjgGpAZIBsAG0AbADxgHEAb4BvAGzAZ8BlAGrAYgBdwGlAXgBYgGjAXIBWwGh
        AYABcQPQA/YGAAE4Ac0BTAEGAcsBQQENAdYBXQERAdwBbQEQAdsBawESAdoBagFOAYUByQEkASMB8AEi
        AdkBbQEPAdgBZAEUAdoBbAE/AdEBVzYAAaEBvwHWATcBlQHXAUgBqQHmAU0BrQHoAVEBsAHqAVYBtAHs
        AV0BvAHxAVkBugHvAboBxAHMAf8B4gHPAeEB1gHRAZcBygHmAVUBqAHdAXsBlAGoA90D+gGKAcMBjgEU
        AcMBKwEtAdgBSQE/AdcBcQFIAdYBhAE+AdgBYQEqAbcBRQFpAXQBOQHHAVsBNAHZAXwBTQHjAZABYQHi
        AYoBWwHWAW4BQQHAAUoBIQPIA/UGAAF9AdkBhwEQAdcBYgEaAeUBhgEZAeMBgwEZAeMBgAGlAe0BzQGw
        AasB+gG2AbIB+gFLAeMBlAESAd0BcAEQAdkBZwGFAdsBjTYAAWMBqAHXAVYBtQHuAVQBswHrAVwBuQHw
        AWkBxQH1AWcBwAHwAWMBwQH1AU4BsQHpAbYBwgHOAf8B2QHGAf8B0gG6AfgB0wG+AZIByAHlAWEBkgGz
        A9oD+QG2AdkBtwEXAbgBLQEoAZUBWAFCAasBxAFUAbYB9AFFAbYBuQEiAdgBRgFHAZgBIQHZAW0BQwHM
        AXcBTAHeAZYBZgHsAZ8BcAHaAXgBSwG+AVgBLwPWA/gGAAHhAfEB4gEXAd8BcwEiAewBmwEcAdgBmAE4
        AbEBqwF3Aa4B0gExAV8BzgGRAZsB7gFxAesBtQEaAeQBhQETAdsBZQHmAfMB5jYAAWwBrgHZAWIBvwHz
        AWoBxwH5AW0BwwHvAUgBjwG5AUsBlAG/AW0BygH7AUMBqAHlAaYBvgHRAf8B8AHoAf8B2gHKAfMB1wHK
        AXgBvgHmAWABkAGxA9oD+QHsAe8B7gEeAYIBRQEhAVYBbQE8AZ8B5QFIAa0B/wFBAawB2wEZAZUBVgFa
        AWsBNAHVAWABNQHjAagBhgHpAacBfAHoAZABXgHcAXcBSwGyAWsBTQPrA/wJAAGjAeQBtAEXAbABpgE5
        AaIB1gFVAb0B+gFVAb4B/wFVAb0B+gE9AaMB2AE1Aq8BHwHpAZEBsAHnAb45AAFxAbMB3AF1Ac8B/AFa
        AaYBzwEvAWwBlwE/AYABqgFpAcAB7AFUAbcB7wEnAYsB0QE+AZsB1QF8AaMB2wGtAaIB7QH2Ae8B5gFv
        AbUB3wFdAY0BsAPaA/kB9AH1AfYBLAFRAXIBJAFQAXoBHwGAAcoBIQGGAdcBIgGBAZsBGwFVAXIBaQFH
        AU4BzAFZASQBrwGhAZUBeAGRAaABqQFlAUUByQFgATABxgG2Aa4D+QP/CQABxgHZAeMBSAGwAegBSQGz
        Af8BQwGuAf8BQwGtAf8BQQGqAf8BRgGvAf8BSAGwAegBjAHEAb88AAF3AbcB4AFxAcIB6gFCAYEBqQFe
        Aa0B2QFpAckB+wFMAbAB6wE3AZoB3QEwAZQB2AEiAYgBzwExAY8B1AFdAZcB3gGTAbUB0QFbAakB2wFd
        AYwBrwPaA/oD/QFaAXUBkwEpAVMBfgEkAYEBygEqAZUB5gEkAXwBwAEhAU4BegGRAY0BkQGtAaABnAEd
        AYUB0AEaAY0B5AEhAXcBtQGaAZABiwPfA/sJAAP+AUIBnAHKAU0BuAH/AUoBuQH/AUwBvAH/AUsBugH/
        AUcBtAH/AUIBrAH/AUYBrwH/AUMBnAHKA/45AAF6AbkB4AF5AdEB+wFtAcoB+QFfAcEB9gFNAa4B6AFK
        AakB5QFJAaoB5gFEAaMB4AE3AZMB0AEyAYsBxgE8AZoB0gEfAYcBzwEwAZQB2gFfAY0BsAPhA/sDAAGk
        AbABvgEtAVgBggEyAZMB3wE8AaQB9QE5AZ8B7gEsAV4BigGkAa0BswF3AaYBxgE3AZ8B8wE3AZwB7AEy
        AZ4B8QFoAYsBogPXA/kJAAHnAe0B8QE2AZ4B1wFMAbwB/wFSAcUB/wFVAcoB/wFTAccB/wFOAb8B/wFH
        AbQB/wFBAaoB/wE5AaEB3QHtAfEB9DkAAXkBuQHgAXEB0AH+AWMBwQH0AVwBugHvAVwBugHwAVkBtgHr
        AU8BqQHeAUgBnQHSAUkBnwHVAU0BqAHgAUwBqwHmAUMBpAHhAS0BjwHTAXEBmwG9A/ID/QMAAdcB3AHh
        ATEBXAGGAT0BngHrAUkBsQH/AUcBrgH/AUIBbQGWAc4B0AHSAV4BpwHcAUkBrwH/AUYBrgH/AUMBqwH8
        AUsBhQGsA9cD+QkAAdoB5QHrARUBfgG4AVABwwH/AVgB0AH/AVwB0wH/AVoB0gH/AVABwwH7AUsBugH/
        AUMBrQH/ATgBoAHgAekB7wHyOQAB4AHpAe8BcgGwAdgBYwG/AfABbwHJAfcBYwG7AeoBWgGtAdwBWQGt
        AdsBXgG2AecBYQG8Ae8BYQG+AfIBYgG/AfMBUQGvAecBbAGiAcoB4gHnAesD/QP/AwAB6wHtAe8BOAFe
        AYYBOgGLAcsBUwHBAf8BTwG0Af0BaQF+AZQD6gFmAakB1QFMAbcB/wE2AZkB4QErAWEBlgFOAXEBjAPl
        A/sJAAHnAe0B8QEAAWcBnwEeAYkBwQFGAbsB6gE6AacB2wEOAXcBrgEAAWcBnwEQAXgBswE3AaEB7wEz
        AZUBzQP8PAAD/gHLAdsB5wFjAaoB1QFlAbcB4gFwAcQB7gFuAccB9QFuAckB+AFxAcsB+gFjAb8B8QFg
        AaIBzwHMAdgB4QP8A/8JAAP9AWYBgAGeAUMBdgGlAUQBjAHCAT4BewGuAb8BwwHIA/kBswHEAdABOgF4
        Aa0BSAF6AagBPwFhAYoBlgGoAbMD9gP+CQAD/gEuAYABrgEAAWcBnwEAAWcBnwEAAWcBnwEAAWcBnwEA
        AWcBnwEAAWcBnwEGAW0BpwGkAcYB2EUAAfoC+wGyAcwB4AFiAbQB5AF4AdIB/gFyAcwB+QFfAakB2QG1
        AckB2AP5A/4SAAHuAe8B8QGGAZsBswFzAYwBqQG/AcYBzgP7A/4D/QGnAbkBxwFkAYkBpwGUAawBuwP3
        A/4PAAHiAeoB7wEPAXABpAEAAWcBnwEAAWcBnwEAAWcBnwEAAWcBnwEAAWcBnwEFAWoBoAH0AfYB90sA
        AfMB9gH3AZ4BwwHdAa0ByAHdAvYB9wP+A/9LAAHvAfMB9QGEAbIBygEyAYMBrwESAXEBpQEoAX4BrAF1
        AakBxgHkAewB8D8AAUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAH4AR8C/wHg
        AQ8CAAHgAQcC/wHAAQMCAAGAAQECAAHAAQMGAAHAAQMGAAHAAQMGAAHAAQMGAAHAAQMGAAHgAQcGAAHg
        AQ8FAAEBAcABBwQAAYABAQHAAQcEAAGAAQEBwAEHBAABgAEBAcABBwIAAYABAwGAAQEBwAEPAgAB4AEP
        AcABAwHgAQ8CAAH4AR8C/wHwAR8CAAs=
</value>
  </data>
</root>