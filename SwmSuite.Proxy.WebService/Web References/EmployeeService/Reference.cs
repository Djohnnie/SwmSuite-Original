//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SwmSuite.Proxy.WebService.EmployeeService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EmployeeServiceSoap", Namespace="SimpleWorkfloorManagementSuiteNameSpace")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BusinessObjectBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Employee[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmployeeGroup[]))]
    public partial class EmployeeService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private SwmSuiteSoapHeader swmSuiteSoapHeaderValueField;
        
        private System.Threading.SendOrPostCallback GetEmployeeGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeGroupDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateEmployeeGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmployeeGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveEmployeeGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeGroupForEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeesForEmployeeGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveEmployeesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultEmployeeForMachineNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeSettingsForEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEmployeeSettingsForEmployeeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EmployeeService() {
            this.Url = global::SwmSuite.Proxy.WebService.Properties.Settings.Default.SwmSuite_Proxy_WebService_EmployeeService_EmployeeService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public SwmSuiteSoapHeader SwmSuiteSoapHeaderValue {
            get {
                return this.swmSuiteSoapHeaderValueField;
            }
            set {
                this.swmSuiteSoapHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetEmployeeGroupsCompletedEventHandler GetEmployeeGroupsCompleted;
        
        /// <remarks/>
        public event GetEmployeeGroupDetailCompletedEventHandler GetEmployeeGroupDetailCompleted;
        
        /// <remarks/>
        public event CreateEmployeeGroupCompletedEventHandler CreateEmployeeGroupCompleted;
        
        /// <remarks/>
        public event UpdateEmployeeGroupCompletedEventHandler UpdateEmployeeGroupCompleted;
        
        /// <remarks/>
        public event RemoveEmployeeGroupsCompletedEventHandler RemoveEmployeeGroupsCompleted;
        
        /// <remarks/>
        public event GetEmployeeGroupForEmployeeCompletedEventHandler GetEmployeeGroupForEmployeeCompleted;
        
        /// <remarks/>
        public event GetEmployeesCompletedEventHandler GetEmployeesCompleted;
        
        /// <remarks/>
        public event GetEmployeesForEmployeeGroupCompletedEventHandler GetEmployeesForEmployeeGroupCompleted;
        
        /// <remarks/>
        public event GetEmployeeDetailCompletedEventHandler GetEmployeeDetailCompleted;
        
        /// <remarks/>
        public event CreateEmployeeCompletedEventHandler CreateEmployeeCompleted;
        
        /// <remarks/>
        public event UpdateEmployeeCompletedEventHandler UpdateEmployeeCompleted;
        
        /// <remarks/>
        public event RemoveEmployeesCompletedEventHandler RemoveEmployeesCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event GetDefaultEmployeeForMachineNameCompletedEventHandler GetDefaultEmployeeForMachineNameCompleted;
        
        /// <remarks/>
        public event GetEmployeeSettingsCompletedEventHandler GetEmployeeSettingsCompleted;
        
        /// <remarks/>
        public event GetEmployeeSettingsForEmployeeCompletedEventHandler GetEmployeeSettingsForEmployeeCompleted;
        
        /// <remarks/>
        public event SetEmployeeSettingsForEmployeeCompletedEventHandler SetEmployeeSettingsForEmployeeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/GetEmployeeGroups", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeGroup[] GetEmployeeGroups() {
            object[] results = this.Invoke("GetEmployeeGroups", new object[0]);
            return ((EmployeeGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeGroupsAsync() {
            this.GetEmployeeGroupsAsync(null);
        }
        
        /// <remarks/>
        public void GetEmployeeGroupsAsync(object userState) {
            if ((this.GetEmployeeGroupsOperationCompleted == null)) {
                this.GetEmployeeGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeGroupsOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeGroups", new object[0], this.GetEmployeeGroupsOperationCompleted, userState);
        }
        
        private void OnGetEmployeeGroupsOperationCompleted(object arg) {
            if ((this.GetEmployeeGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeGroupsCompleted(this, new GetEmployeeGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/GetEmployeeGroupDetail", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeGroup GetEmployeeGroupDetail(int sysId) {
            object[] results = this.Invoke("GetEmployeeGroupDetail", new object[] {
                        sysId});
            return ((EmployeeGroup)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeGroupDetailAsync(int sysId) {
            this.GetEmployeeGroupDetailAsync(sysId, null);
        }
        
        /// <remarks/>
        public void GetEmployeeGroupDetailAsync(int sysId, object userState) {
            if ((this.GetEmployeeGroupDetailOperationCompleted == null)) {
                this.GetEmployeeGroupDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeGroupDetailOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeGroupDetail", new object[] {
                        sysId}, this.GetEmployeeGroupDetailOperationCompleted, userState);
        }
        
        private void OnGetEmployeeGroupDetailOperationCompleted(object arg) {
            if ((this.GetEmployeeGroupDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeGroupDetailCompleted(this, new GetEmployeeGroupDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/CreateEmployeeGroup", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeGroup CreateEmployeeGroup(EmployeeGroup employeeGroup) {
            object[] results = this.Invoke("CreateEmployeeGroup", new object[] {
                        employeeGroup});
            return ((EmployeeGroup)(results[0]));
        }
        
        /// <remarks/>
        public void CreateEmployeeGroupAsync(EmployeeGroup employeeGroup) {
            this.CreateEmployeeGroupAsync(employeeGroup, null);
        }
        
        /// <remarks/>
        public void CreateEmployeeGroupAsync(EmployeeGroup employeeGroup, object userState) {
            if ((this.CreateEmployeeGroupOperationCompleted == null)) {
                this.CreateEmployeeGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateEmployeeGroupOperationCompleted);
            }
            this.InvokeAsync("CreateEmployeeGroup", new object[] {
                        employeeGroup}, this.CreateEmployeeGroupOperationCompleted, userState);
        }
        
        private void OnCreateEmployeeGroupOperationCompleted(object arg) {
            if ((this.CreateEmployeeGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateEmployeeGroupCompleted(this, new CreateEmployeeGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/UpdateEmployeeGroup", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeGroup UpdateEmployeeGroup(EmployeeGroup employeeGroup) {
            object[] results = this.Invoke("UpdateEmployeeGroup", new object[] {
                        employeeGroup});
            return ((EmployeeGroup)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmployeeGroupAsync(EmployeeGroup employeeGroup) {
            this.UpdateEmployeeGroupAsync(employeeGroup, null);
        }
        
        /// <remarks/>
        public void UpdateEmployeeGroupAsync(EmployeeGroup employeeGroup, object userState) {
            if ((this.UpdateEmployeeGroupOperationCompleted == null)) {
                this.UpdateEmployeeGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmployeeGroupOperationCompleted);
            }
            this.InvokeAsync("UpdateEmployeeGroup", new object[] {
                        employeeGroup}, this.UpdateEmployeeGroupOperationCompleted, userState);
        }
        
        private void OnUpdateEmployeeGroupOperationCompleted(object arg) {
            if ((this.UpdateEmployeeGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmployeeGroupCompleted(this, new UpdateEmployeeGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/RemoveEmployeeGroups", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveEmployeeGroups(EmployeeGroup[] employeeGroups) {
            this.Invoke("RemoveEmployeeGroups", new object[] {
                        employeeGroups});
        }
        
        /// <remarks/>
        public void RemoveEmployeeGroupsAsync(EmployeeGroup[] employeeGroups) {
            this.RemoveEmployeeGroupsAsync(employeeGroups, null);
        }
        
        /// <remarks/>
        public void RemoveEmployeeGroupsAsync(EmployeeGroup[] employeeGroups, object userState) {
            if ((this.RemoveEmployeeGroupsOperationCompleted == null)) {
                this.RemoveEmployeeGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveEmployeeGroupsOperationCompleted);
            }
            this.InvokeAsync("RemoveEmployeeGroups", new object[] {
                        employeeGroups}, this.RemoveEmployeeGroupsOperationCompleted, userState);
        }
        
        private void OnRemoveEmployeeGroupsOperationCompleted(object arg) {
            if ((this.RemoveEmployeeGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveEmployeeGroupsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/GetEmployeeGroupForEmployee", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeGroup GetEmployeeGroupForEmployee(Employee employee) {
            object[] results = this.Invoke("GetEmployeeGroupForEmployee", new object[] {
                        employee});
            return ((EmployeeGroup)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeGroupForEmployeeAsync(Employee employee) {
            this.GetEmployeeGroupForEmployeeAsync(employee, null);
        }
        
        /// <remarks/>
        public void GetEmployeeGroupForEmployeeAsync(Employee employee, object userState) {
            if ((this.GetEmployeeGroupForEmployeeOperationCompleted == null)) {
                this.GetEmployeeGroupForEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeGroupForEmployeeOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeGroupForEmployee", new object[] {
                        employee}, this.GetEmployeeGroupForEmployeeOperationCompleted, userState);
        }
        
        private void OnGetEmployeeGroupForEmployeeOperationCompleted(object arg) {
            if ((this.GetEmployeeGroupForEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeGroupForEmployeeCompleted(this, new GetEmployeeGroupForEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/GetEmployees", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee[] GetEmployees() {
            object[] results = this.Invoke("GetEmployees", new object[0]);
            return ((Employee[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeesAsync() {
            this.GetEmployeesAsync(null);
        }
        
        /// <remarks/>
        public void GetEmployeesAsync(object userState) {
            if ((this.GetEmployeesOperationCompleted == null)) {
                this.GetEmployeesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeesOperationCompleted);
            }
            this.InvokeAsync("GetEmployees", new object[0], this.GetEmployeesOperationCompleted, userState);
        }
        
        private void OnGetEmployeesOperationCompleted(object arg) {
            if ((this.GetEmployeesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeesCompleted(this, new GetEmployeesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/GetEmployeesForEmployeeGroup", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee[] GetEmployeesForEmployeeGroup(EmployeeGroup employeeGroup) {
            object[] results = this.Invoke("GetEmployeesForEmployeeGroup", new object[] {
                        employeeGroup});
            return ((Employee[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeesForEmployeeGroupAsync(EmployeeGroup employeeGroup) {
            this.GetEmployeesForEmployeeGroupAsync(employeeGroup, null);
        }
        
        /// <remarks/>
        public void GetEmployeesForEmployeeGroupAsync(EmployeeGroup employeeGroup, object userState) {
            if ((this.GetEmployeesForEmployeeGroupOperationCompleted == null)) {
                this.GetEmployeesForEmployeeGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeesForEmployeeGroupOperationCompleted);
            }
            this.InvokeAsync("GetEmployeesForEmployeeGroup", new object[] {
                        employeeGroup}, this.GetEmployeesForEmployeeGroupOperationCompleted, userState);
        }
        
        private void OnGetEmployeesForEmployeeGroupOperationCompleted(object arg) {
            if ((this.GetEmployeesForEmployeeGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeesForEmployeeGroupCompleted(this, new GetEmployeesForEmployeeGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/GetEmployeeDetail", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee GetEmployeeDetail(int sysId) {
            object[] results = this.Invoke("GetEmployeeDetail", new object[] {
                        sysId});
            return ((Employee)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeDetailAsync(int sysId) {
            this.GetEmployeeDetailAsync(sysId, null);
        }
        
        /// <remarks/>
        public void GetEmployeeDetailAsync(int sysId, object userState) {
            if ((this.GetEmployeeDetailOperationCompleted == null)) {
                this.GetEmployeeDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeDetailOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeDetail", new object[] {
                        sysId}, this.GetEmployeeDetailOperationCompleted, userState);
        }
        
        private void OnGetEmployeeDetailOperationCompleted(object arg) {
            if ((this.GetEmployeeDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeDetailCompleted(this, new GetEmployeeDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/CreateEmployee", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee CreateEmployee(Employee employee, EmployeeGroup employeeGroup) {
            object[] results = this.Invoke("CreateEmployee", new object[] {
                        employee,
                        employeeGroup});
            return ((Employee)(results[0]));
        }
        
        /// <remarks/>
        public void CreateEmployeeAsync(Employee employee, EmployeeGroup employeeGroup) {
            this.CreateEmployeeAsync(employee, employeeGroup, null);
        }
        
        /// <remarks/>
        public void CreateEmployeeAsync(Employee employee, EmployeeGroup employeeGroup, object userState) {
            if ((this.CreateEmployeeOperationCompleted == null)) {
                this.CreateEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateEmployeeOperationCompleted);
            }
            this.InvokeAsync("CreateEmployee", new object[] {
                        employee,
                        employeeGroup}, this.CreateEmployeeOperationCompleted, userState);
        }
        
        private void OnCreateEmployeeOperationCompleted(object arg) {
            if ((this.CreateEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateEmployeeCompleted(this, new CreateEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/UpdateEmployee", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee UpdateEmployee(Employee employee, EmployeeGroup employeeGroup) {
            object[] results = this.Invoke("UpdateEmployee", new object[] {
                        employee,
                        employeeGroup});
            return ((Employee)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmployeeAsync(Employee employee, EmployeeGroup employeeGroup) {
            this.UpdateEmployeeAsync(employee, employeeGroup, null);
        }
        
        /// <remarks/>
        public void UpdateEmployeeAsync(Employee employee, EmployeeGroup employeeGroup, object userState) {
            if ((this.UpdateEmployeeOperationCompleted == null)) {
                this.UpdateEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmployeeOperationCompleted);
            }
            this.InvokeAsync("UpdateEmployee", new object[] {
                        employee,
                        employeeGroup}, this.UpdateEmployeeOperationCompleted, userState);
        }
        
        private void OnUpdateEmployeeOperationCompleted(object arg) {
            if ((this.UpdateEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmployeeCompleted(this, new UpdateEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/RemoveEmployees", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveEmployees(Employee[] employees) {
            this.Invoke("RemoveEmployees", new object[] {
                        employees});
        }
        
        /// <remarks/>
        public void RemoveEmployeesAsync(Employee[] employees) {
            this.RemoveEmployeesAsync(employees, null);
        }
        
        /// <remarks/>
        public void RemoveEmployeesAsync(Employee[] employees, object userState) {
            if ((this.RemoveEmployeesOperationCompleted == null)) {
                this.RemoveEmployeesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveEmployeesOperationCompleted);
            }
            this.InvokeAsync("RemoveEmployees", new object[] {
                        employees}, this.RemoveEmployeesOperationCompleted, userState);
        }
        
        private void OnRemoveEmployeesOperationCompleted(object arg) {
            if ((this.RemoveEmployeesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveEmployeesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/ChangePassword", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangePassword(string userName, string oldPassword, string newPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        userName,
                        oldPassword,
                        newPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string userName, string oldPassword, string newPassword) {
            this.ChangePasswordAsync(userName, oldPassword, newPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string userName, string oldPassword, string newPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        userName,
                        oldPassword,
                        newPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/GetDefaultEmployeeForMachineName", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee GetDefaultEmployeeForMachineName(string machineName) {
            object[] results = this.Invoke("GetDefaultEmployeeForMachineName", new object[] {
                        machineName});
            return ((Employee)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultEmployeeForMachineNameAsync(string machineName) {
            this.GetDefaultEmployeeForMachineNameAsync(machineName, null);
        }
        
        /// <remarks/>
        public void GetDefaultEmployeeForMachineNameAsync(string machineName, object userState) {
            if ((this.GetDefaultEmployeeForMachineNameOperationCompleted == null)) {
                this.GetDefaultEmployeeForMachineNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultEmployeeForMachineNameOperationCompleted);
            }
            this.InvokeAsync("GetDefaultEmployeeForMachineName", new object[] {
                        machineName}, this.GetDefaultEmployeeForMachineNameOperationCompleted, userState);
        }
        
        private void OnGetDefaultEmployeeForMachineNameOperationCompleted(object arg) {
            if ((this.GetDefaultEmployeeForMachineNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultEmployeeForMachineNameCompleted(this, new GetDefaultEmployeeForMachineNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/GetEmployeeSettings", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeSettings GetEmployeeSettings(int sysId) {
            object[] results = this.Invoke("GetEmployeeSettings", new object[] {
                        sysId});
            return ((EmployeeSettings)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeSettingsAsync(int sysId) {
            this.GetEmployeeSettingsAsync(sysId, null);
        }
        
        /// <remarks/>
        public void GetEmployeeSettingsAsync(int sysId, object userState) {
            if ((this.GetEmployeeSettingsOperationCompleted == null)) {
                this.GetEmployeeSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeSettingsOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeSettings", new object[] {
                        sysId}, this.GetEmployeeSettingsOperationCompleted, userState);
        }
        
        private void OnGetEmployeeSettingsOperationCompleted(object arg) {
            if ((this.GetEmployeeSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeSettingsCompleted(this, new GetEmployeeSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/GetEmployeeSettingsForEmployee", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeSettings GetEmployeeSettingsForEmployee(Employee employee) {
            object[] results = this.Invoke("GetEmployeeSettingsForEmployee", new object[] {
                        employee});
            return ((EmployeeSettings)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeSettingsForEmployeeAsync(Employee employee) {
            this.GetEmployeeSettingsForEmployeeAsync(employee, null);
        }
        
        /// <remarks/>
        public void GetEmployeeSettingsForEmployeeAsync(Employee employee, object userState) {
            if ((this.GetEmployeeSettingsForEmployeeOperationCompleted == null)) {
                this.GetEmployeeSettingsForEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeSettingsForEmployeeOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeSettingsForEmployee", new object[] {
                        employee}, this.GetEmployeeSettingsForEmployeeOperationCompleted, userState);
        }
        
        private void OnGetEmployeeSettingsForEmployeeOperationCompleted(object arg) {
            if ((this.GetEmployeeSettingsForEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeSettingsForEmployeeCompleted(this, new GetEmployeeSettingsForEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/SetEmployeeSettingsForEmployee", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeSettings SetEmployeeSettingsForEmployee(EmployeeSettings employeeSettings, Employee employee) {
            object[] results = this.Invoke("SetEmployeeSettingsForEmployee", new object[] {
                        employeeSettings,
                        employee});
            return ((EmployeeSettings)(results[0]));
        }
        
        /// <remarks/>
        public void SetEmployeeSettingsForEmployeeAsync(EmployeeSettings employeeSettings, Employee employee) {
            this.SetEmployeeSettingsForEmployeeAsync(employeeSettings, employee, null);
        }
        
        /// <remarks/>
        public void SetEmployeeSettingsForEmployeeAsync(EmployeeSettings employeeSettings, Employee employee, object userState) {
            if ((this.SetEmployeeSettingsForEmployeeOperationCompleted == null)) {
                this.SetEmployeeSettingsForEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEmployeeSettingsForEmployeeOperationCompleted);
            }
            this.InvokeAsync("SetEmployeeSettingsForEmployee", new object[] {
                        employeeSettings,
                        employee}, this.SetEmployeeSettingsForEmployeeOperationCompleted, userState);
        }
        
        private void OnSetEmployeeSettingsForEmployeeOperationCompleted(object arg) {
            if ((this.SetEmployeeSettingsForEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEmployeeSettingsForEmployeeCompleted(this, new SetEmployeeSettingsForEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SimpleWorkfloorManagementSuiteNameSpace")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="SimpleWorkfloorManagementSuiteNameSpace", IsNullable=false)]
    public partial class SwmSuiteSoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string userNameField;
        
        private string passwordField;
        
        private int employeeField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public int Employee {
            get {
                return this.employeeField;
            }
            set {
                this.employeeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmployeeSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Avatar))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ZipCode))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Employee))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmployeeGroup))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SwmSuite_v1")]
    public partial class BusinessObjectBase {
        
        private int sysIdField;
        
        private int rowVersionField;
        
        /// <remarks/>
        public int SysId {
            get {
                return this.sysIdField;
            }
            set {
                this.sysIdField = value;
            }
        }
        
        /// <remarks/>
        public int RowVersion {
            get {
                return this.rowVersionField;
            }
            set {
                this.rowVersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SwmSuite_v1")]
    public partial class EmployeeSettings : BusinessObjectBase {
        
        private bool autoLogonField;
        
        private string autoLogonHostField;
        
        private int logoutTimeoutField;
        
        private bool emailNotificationField;
        
        private string emailAddressField;
        
        private string smtpServerField;
        
        private System.Nullable<int> smtpPortField;
        
        private bool secureConnectionField;
        
        private bool authenticationField;
        
        private string usernameField;
        
        private string passwordField;
        
        /// <remarks/>
        public bool AutoLogon {
            get {
                return this.autoLogonField;
            }
            set {
                this.autoLogonField = value;
            }
        }
        
        /// <remarks/>
        public string AutoLogonHost {
            get {
                return this.autoLogonHostField;
            }
            set {
                this.autoLogonHostField = value;
            }
        }
        
        /// <remarks/>
        public int LogoutTimeout {
            get {
                return this.logoutTimeoutField;
            }
            set {
                this.logoutTimeoutField = value;
            }
        }
        
        /// <remarks/>
        public bool EmailNotification {
            get {
                return this.emailNotificationField;
            }
            set {
                this.emailNotificationField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string SmtpServer {
            get {
                return this.smtpServerField;
            }
            set {
                this.smtpServerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SmtpPort {
            get {
                return this.smtpPortField;
            }
            set {
                this.smtpPortField = value;
            }
        }
        
        /// <remarks/>
        public bool SecureConnection {
            get {
                return this.secureConnectionField;
            }
            set {
                this.secureConnectionField = value;
            }
        }
        
        /// <remarks/>
        public bool Authentication {
            get {
                return this.authenticationField;
            }
            set {
                this.authenticationField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SwmSuite_v1")]
    public partial class Avatar : BusinessObjectBase {
        
        private byte[] pictureField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Picture {
            get {
                return this.pictureField;
            }
            set {
                this.pictureField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SwmSuite_v1")]
    public partial class ZipCode : BusinessObjectBase {
        
        private string codeField;
        
        private string cityField;
        
        private string countryField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SwmSuite_v1")]
    public partial class Employee : BusinessObjectBase {
        
        private System.Guid userSysIdField;
        
        private string nameField;
        
        private string firstNameField;
        
        private string addressField;
        
        private ZipCode zipCodeField;
        
        private string privatePhoneNumberField;
        
        private string workPhoneNumberField;
        
        private string cellPhoneNumberField;
        
        private string emailAddress1Field;
        
        private string emailAddress2Field;
        
        private string emailAddress3Field;
        
        private string emailAddress4Field;
        
        private string emailAddress5Field;
        
        private Avatar avatarField;
        
        private EmployeeSettings settingsField;
        
        private string userNameField;
        
        private string passwordField;
        
        private bool administratorField;
        
        /// <remarks/>
        public System.Guid UserSysId {
            get {
                return this.userSysIdField;
            }
            set {
                this.userSysIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public ZipCode ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PrivatePhoneNumber {
            get {
                return this.privatePhoneNumberField;
            }
            set {
                this.privatePhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string WorkPhoneNumber {
            get {
                return this.workPhoneNumberField;
            }
            set {
                this.workPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CellPhoneNumber {
            get {
                return this.cellPhoneNumberField;
            }
            set {
                this.cellPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress1 {
            get {
                return this.emailAddress1Field;
            }
            set {
                this.emailAddress1Field = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress2 {
            get {
                return this.emailAddress2Field;
            }
            set {
                this.emailAddress2Field = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress3 {
            get {
                return this.emailAddress3Field;
            }
            set {
                this.emailAddress3Field = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress4 {
            get {
                return this.emailAddress4Field;
            }
            set {
                this.emailAddress4Field = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress5 {
            get {
                return this.emailAddress5Field;
            }
            set {
                this.emailAddress5Field = value;
            }
        }
        
        /// <remarks/>
        public Avatar Avatar {
            get {
                return this.avatarField;
            }
            set {
                this.avatarField = value;
            }
        }
        
        /// <remarks/>
        public EmployeeSettings Settings {
            get {
                return this.settingsField;
            }
            set {
                this.settingsField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public bool Administrator {
            get {
                return this.administratorField;
            }
            set {
                this.administratorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SwmSuite_v1")]
    public partial class EmployeeGroup : BusinessObjectBase {
        
        private string nameField;
        
        private string descriptionField;
        
        private Employee[] employeesField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public Employee[] Employees {
            get {
                return this.employeesField;
            }
            set {
                this.employeesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEmployeeGroupsCompletedEventHandler(object sender, GetEmployeeGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEmployeeGroupDetailCompletedEventHandler(object sender, GetEmployeeGroupDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeGroupDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeGroupDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeGroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeGroup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateEmployeeGroupCompletedEventHandler(object sender, CreateEmployeeGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateEmployeeGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateEmployeeGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeGroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeGroup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateEmployeeGroupCompletedEventHandler(object sender, UpdateEmployeeGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmployeeGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmployeeGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeGroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeGroup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveEmployeeGroupsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEmployeeGroupForEmployeeCompletedEventHandler(object sender, GetEmployeeGroupForEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeGroupForEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeGroupForEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeGroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeGroup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEmployeesCompletedEventHandler(object sender, GetEmployeesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEmployeesForEmployeeGroupCompletedEventHandler(object sender, GetEmployeesForEmployeeGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeesForEmployeeGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeesForEmployeeGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEmployeeDetailCompletedEventHandler(object sender, GetEmployeeDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateEmployeeCompletedEventHandler(object sender, CreateEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateEmployeeCompletedEventHandler(object sender, UpdateEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveEmployeesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDefaultEmployeeForMachineNameCompletedEventHandler(object sender, GetDefaultEmployeeForMachineNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultEmployeeForMachineNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultEmployeeForMachineNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEmployeeSettingsCompletedEventHandler(object sender, GetEmployeeSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeSettings Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeSettings)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEmployeeSettingsForEmployeeCompletedEventHandler(object sender, GetEmployeeSettingsForEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeSettingsForEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeSettingsForEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeSettings Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeSettings)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SetEmployeeSettingsForEmployeeCompletedEventHandler(object sender, SetEmployeeSettingsForEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetEmployeeSettingsForEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetEmployeeSettingsForEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeSettings Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeSettings)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591