//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SwmSuite.Proxy.WebService.ZipCodeService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ZipCodeServiceSoap", Namespace="SimpleWorkfloorManagementSuiteNameSpace")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BusinessObjectBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ZipCode[]))]
    public partial class ZipCodeService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private SwmSuiteSoapHeader swmSuiteSoapHeaderValueField;
        
        private System.Threading.SendOrPostCallback GetZipCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZipCodesByCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZipCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateZipCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateZipCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveZipCodesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ZipCodeService() {
            this.Url = global::SwmSuite.Proxy.WebService.Properties.Settings.Default.SwmSuite_Proxy_WebService_ZipCodeService_ZipCodeService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public SwmSuiteSoapHeader SwmSuiteSoapHeaderValue {
            get {
                return this.swmSuiteSoapHeaderValueField;
            }
            set {
                this.swmSuiteSoapHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetZipCodesCompletedEventHandler GetZipCodesCompleted;
        
        /// <remarks/>
        public event GetZipCodesByCountryCompletedEventHandler GetZipCodesByCountryCompleted;
        
        /// <remarks/>
        public event GetZipCodeCompletedEventHandler GetZipCodeCompleted;
        
        /// <remarks/>
        public event CreateZipCodeCompletedEventHandler CreateZipCodeCompleted;
        
        /// <remarks/>
        public event UpdateZipCodeCompletedEventHandler UpdateZipCodeCompleted;
        
        /// <remarks/>
        public event RemoveZipCodesCompletedEventHandler RemoveZipCodesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/GetZipCodes", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ZipCode[] GetZipCodes() {
            object[] results = this.Invoke("GetZipCodes", new object[0]);
            return ((ZipCode[])(results[0]));
        }
        
        /// <remarks/>
        public void GetZipCodesAsync() {
            this.GetZipCodesAsync(null);
        }
        
        /// <remarks/>
        public void GetZipCodesAsync(object userState) {
            if ((this.GetZipCodesOperationCompleted == null)) {
                this.GetZipCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZipCodesOperationCompleted);
            }
            this.InvokeAsync("GetZipCodes", new object[0], this.GetZipCodesOperationCompleted, userState);
        }
        
        private void OnGetZipCodesOperationCompleted(object arg) {
            if ((this.GetZipCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZipCodesCompleted(this, new GetZipCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/GetZipCodesByCountry", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ZipCode[] GetZipCodesByCountry(Country country) {
            object[] results = this.Invoke("GetZipCodesByCountry", new object[] {
                        country});
            return ((ZipCode[])(results[0]));
        }
        
        /// <remarks/>
        public void GetZipCodesByCountryAsync(Country country) {
            this.GetZipCodesByCountryAsync(country, null);
        }
        
        /// <remarks/>
        public void GetZipCodesByCountryAsync(Country country, object userState) {
            if ((this.GetZipCodesByCountryOperationCompleted == null)) {
                this.GetZipCodesByCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZipCodesByCountryOperationCompleted);
            }
            this.InvokeAsync("GetZipCodesByCountry", new object[] {
                        country}, this.GetZipCodesByCountryOperationCompleted, userState);
        }
        
        private void OnGetZipCodesByCountryOperationCompleted(object arg) {
            if ((this.GetZipCodesByCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZipCodesByCountryCompleted(this, new GetZipCodesByCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/GetZipCode", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ZipCode GetZipCode(int sysId) {
            object[] results = this.Invoke("GetZipCode", new object[] {
                        sysId});
            return ((ZipCode)(results[0]));
        }
        
        /// <remarks/>
        public void GetZipCodeAsync(int sysId) {
            this.GetZipCodeAsync(sysId, null);
        }
        
        /// <remarks/>
        public void GetZipCodeAsync(int sysId, object userState) {
            if ((this.GetZipCodeOperationCompleted == null)) {
                this.GetZipCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZipCodeOperationCompleted);
            }
            this.InvokeAsync("GetZipCode", new object[] {
                        sysId}, this.GetZipCodeOperationCompleted, userState);
        }
        
        private void OnGetZipCodeOperationCompleted(object arg) {
            if ((this.GetZipCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZipCodeCompleted(this, new GetZipCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/CreateZipCode", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ZipCode CreateZipCode(ZipCode zipcode, Country country) {
            object[] results = this.Invoke("CreateZipCode", new object[] {
                        zipcode,
                        country});
            return ((ZipCode)(results[0]));
        }
        
        /// <remarks/>
        public void CreateZipCodeAsync(ZipCode zipcode, Country country) {
            this.CreateZipCodeAsync(zipcode, country, null);
        }
        
        /// <remarks/>
        public void CreateZipCodeAsync(ZipCode zipcode, Country country, object userState) {
            if ((this.CreateZipCodeOperationCompleted == null)) {
                this.CreateZipCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateZipCodeOperationCompleted);
            }
            this.InvokeAsync("CreateZipCode", new object[] {
                        zipcode,
                        country}, this.CreateZipCodeOperationCompleted, userState);
        }
        
        private void OnCreateZipCodeOperationCompleted(object arg) {
            if ((this.CreateZipCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateZipCodeCompleted(this, new CreateZipCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/UpdateZipCode", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ZipCode UpdateZipCode(ZipCode zipcode, Country country) {
            object[] results = this.Invoke("UpdateZipCode", new object[] {
                        zipcode,
                        country});
            return ((ZipCode)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateZipCodeAsync(ZipCode zipcode, Country country) {
            this.UpdateZipCodeAsync(zipcode, country, null);
        }
        
        /// <remarks/>
        public void UpdateZipCodeAsync(ZipCode zipcode, Country country, object userState) {
            if ((this.UpdateZipCodeOperationCompleted == null)) {
                this.UpdateZipCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateZipCodeOperationCompleted);
            }
            this.InvokeAsync("UpdateZipCode", new object[] {
                        zipcode,
                        country}, this.UpdateZipCodeOperationCompleted, userState);
        }
        
        private void OnUpdateZipCodeOperationCompleted(object arg) {
            if ((this.UpdateZipCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateZipCodeCompleted(this, new UpdateZipCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/RemoveZipCodes", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveZipCodes(ZipCode[] zipcodes) {
            this.Invoke("RemoveZipCodes", new object[] {
                        zipcodes});
        }
        
        /// <remarks/>
        public void RemoveZipCodesAsync(ZipCode[] zipcodes) {
            this.RemoveZipCodesAsync(zipcodes, null);
        }
        
        /// <remarks/>
        public void RemoveZipCodesAsync(ZipCode[] zipcodes, object userState) {
            if ((this.RemoveZipCodesOperationCompleted == null)) {
                this.RemoveZipCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveZipCodesOperationCompleted);
            }
            this.InvokeAsync("RemoveZipCodes", new object[] {
                        zipcodes}, this.RemoveZipCodesOperationCompleted, userState);
        }
        
        private void OnRemoveZipCodesOperationCompleted(object arg) {
            if ((this.RemoveZipCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveZipCodesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SimpleWorkfloorManagementSuiteNameSpace")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="SimpleWorkfloorManagementSuiteNameSpace", IsNullable=false)]
    public partial class SwmSuiteSoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string userNameField;
        
        private string passwordField;
        
        private int employeeField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public int Employee {
            get {
                return this.employeeField;
            }
            set {
                this.employeeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Country))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ZipCode))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SwmSuite_v1")]
    public partial class BusinessObjectBase {
        
        private int sysIdField;
        
        private int rowVersionField;
        
        /// <remarks/>
        public int SysId {
            get {
                return this.sysIdField;
            }
            set {
                this.sysIdField = value;
            }
        }
        
        /// <remarks/>
        public int RowVersion {
            get {
                return this.rowVersionField;
            }
            set {
                this.rowVersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SwmSuite_v1")]
    public partial class Country : BusinessObjectBase {
        
        private string nameField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SwmSuite_v1")]
    public partial class ZipCode : BusinessObjectBase {
        
        private string codeField;
        
        private string cityField;
        
        private string countryField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetZipCodesCompletedEventHandler(object sender, GetZipCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZipCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZipCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ZipCode[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ZipCode[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetZipCodesByCountryCompletedEventHandler(object sender, GetZipCodesByCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZipCodesByCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZipCodesByCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ZipCode[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ZipCode[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetZipCodeCompletedEventHandler(object sender, GetZipCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZipCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZipCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ZipCode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ZipCode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateZipCodeCompletedEventHandler(object sender, CreateZipCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateZipCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateZipCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ZipCode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ZipCode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateZipCodeCompletedEventHandler(object sender, UpdateZipCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateZipCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateZipCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ZipCode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ZipCode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveZipCodesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591