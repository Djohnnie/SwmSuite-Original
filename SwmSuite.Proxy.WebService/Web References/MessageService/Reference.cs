//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SwmSuite.Proxy.WebService.MessageService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MessageServiceSoap", Namespace="SimpleWorkfloorManagementSuiteNameSpace")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BusinessObjectBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MessageFolder[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Employee[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Message[]))]
    public partial class MessageService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private SwmSuiteSoapHeader swmSuiteSoapHeaderValueField;
        
        private System.Threading.SendOrPostCallback GetMessagesForMessageFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRootMessageFoldersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageFoldersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpecialMessageFolderForEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageFolderDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateMessageFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMessageFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveMessageFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateReadFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNewFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMessageFolderOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MessageService() {
            this.Url = global::SwmSuite.Proxy.WebService.Properties.Settings.Default.SwmSuite_Proxy_WebService_MessageService_MessageService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public SwmSuiteSoapHeader SwmSuiteSoapHeaderValue {
            get {
                return this.swmSuiteSoapHeaderValueField;
            }
            set {
                this.swmSuiteSoapHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetMessagesForMessageFolderCompletedEventHandler GetMessagesForMessageFolderCompleted;
        
        /// <remarks/>
        public event SendMessageCompletedEventHandler SendMessageCompleted;
        
        /// <remarks/>
        public event DeleteMessageCompletedEventHandler DeleteMessageCompleted;
        
        /// <remarks/>
        public event MoveMessageCompletedEventHandler MoveMessageCompleted;
        
        /// <remarks/>
        public event GetRootMessageFoldersCompletedEventHandler GetRootMessageFoldersCompleted;
        
        /// <remarks/>
        public event GetMessageFoldersCompletedEventHandler GetMessageFoldersCompleted;
        
        /// <remarks/>
        public event GetSpecialMessageFolderForEmployeeCompletedEventHandler GetSpecialMessageFolderForEmployeeCompleted;
        
        /// <remarks/>
        public event GetMessageFolderDetailCompletedEventHandler GetMessageFolderDetailCompleted;
        
        /// <remarks/>
        public event CreateMessageFolderCompletedEventHandler CreateMessageFolderCompleted;
        
        /// <remarks/>
        public event UpdateMessageFolderCompletedEventHandler UpdateMessageFolderCompleted;
        
        /// <remarks/>
        public event MoveMessageFolderCompletedEventHandler MoveMessageFolderCompleted;
        
        /// <remarks/>
        public event UpdateReadFlagCompletedEventHandler UpdateReadFlagCompleted;
        
        /// <remarks/>
        public event UpdateNewFlagCompletedEventHandler UpdateNewFlagCompleted;
        
        /// <remarks/>
        public event DeleteMessageFolderCompletedEventHandler DeleteMessageFolderCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/GetMessagesForMessageFolder", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Message[] GetMessagesForMessageFolder(MessageFolder messageFolder) {
            object[] results = this.Invoke("GetMessagesForMessageFolder", new object[] {
                        messageFolder});
            return ((Message[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMessagesForMessageFolderAsync(MessageFolder messageFolder) {
            this.GetMessagesForMessageFolderAsync(messageFolder, null);
        }
        
        /// <remarks/>
        public void GetMessagesForMessageFolderAsync(MessageFolder messageFolder, object userState) {
            if ((this.GetMessagesForMessageFolderOperationCompleted == null)) {
                this.GetMessagesForMessageFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessagesForMessageFolderOperationCompleted);
            }
            this.InvokeAsync("GetMessagesForMessageFolder", new object[] {
                        messageFolder}, this.GetMessagesForMessageFolderOperationCompleted, userState);
        }
        
        private void OnGetMessagesForMessageFolderOperationCompleted(object arg) {
            if ((this.GetMessagesForMessageFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessagesForMessageFolderCompleted(this, new GetMessagesForMessageFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/SendMessage", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendMessage(Message message, Employee[] employees) {
            this.Invoke("SendMessage", new object[] {
                        message,
                        employees});
        }
        
        /// <remarks/>
        public void SendMessageAsync(Message message, Employee[] employees) {
            this.SendMessageAsync(message, employees, null);
        }
        
        /// <remarks/>
        public void SendMessageAsync(Message message, Employee[] employees, object userState) {
            if ((this.SendMessageOperationCompleted == null)) {
                this.SendMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMessageOperationCompleted);
            }
            this.InvokeAsync("SendMessage", new object[] {
                        message,
                        employees}, this.SendMessageOperationCompleted, userState);
        }
        
        private void OnSendMessageOperationCompleted(object arg) {
            if ((this.SendMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/DeleteMessage", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteMessage(Message message, MessageFolder messageFolder) {
            this.Invoke("DeleteMessage", new object[] {
                        message,
                        messageFolder});
        }
        
        /// <remarks/>
        public void DeleteMessageAsync(Message message, MessageFolder messageFolder) {
            this.DeleteMessageAsync(message, messageFolder, null);
        }
        
        /// <remarks/>
        public void DeleteMessageAsync(Message message, MessageFolder messageFolder, object userState) {
            if ((this.DeleteMessageOperationCompleted == null)) {
                this.DeleteMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMessageOperationCompleted);
            }
            this.InvokeAsync("DeleteMessage", new object[] {
                        message,
                        messageFolder}, this.DeleteMessageOperationCompleted, userState);
        }
        
        private void OnDeleteMessageOperationCompleted(object arg) {
            if ((this.DeleteMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/MoveMessage", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MoveMessage(Message message, MessageFolder source, MessageFolder destination) {
            this.Invoke("MoveMessage", new object[] {
                        message,
                        source,
                        destination});
        }
        
        /// <remarks/>
        public void MoveMessageAsync(Message message, MessageFolder source, MessageFolder destination) {
            this.MoveMessageAsync(message, source, destination, null);
        }
        
        /// <remarks/>
        public void MoveMessageAsync(Message message, MessageFolder source, MessageFolder destination, object userState) {
            if ((this.MoveMessageOperationCompleted == null)) {
                this.MoveMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveMessageOperationCompleted);
            }
            this.InvokeAsync("MoveMessage", new object[] {
                        message,
                        source,
                        destination}, this.MoveMessageOperationCompleted, userState);
        }
        
        private void OnMoveMessageOperationCompleted(object arg) {
            if ((this.MoveMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/GetRootMessageFolders", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageFolder[] GetRootMessageFolders(Employee employee) {
            object[] results = this.Invoke("GetRootMessageFolders", new object[] {
                        employee});
            return ((MessageFolder[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRootMessageFoldersAsync(Employee employee) {
            this.GetRootMessageFoldersAsync(employee, null);
        }
        
        /// <remarks/>
        public void GetRootMessageFoldersAsync(Employee employee, object userState) {
            if ((this.GetRootMessageFoldersOperationCompleted == null)) {
                this.GetRootMessageFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRootMessageFoldersOperationCompleted);
            }
            this.InvokeAsync("GetRootMessageFolders", new object[] {
                        employee}, this.GetRootMessageFoldersOperationCompleted, userState);
        }
        
        private void OnGetRootMessageFoldersOperationCompleted(object arg) {
            if ((this.GetRootMessageFoldersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRootMessageFoldersCompleted(this, new GetRootMessageFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/GetMessageFolders", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageFolder[] GetMessageFolders(MessageFolder messageFolder) {
            object[] results = this.Invoke("GetMessageFolders", new object[] {
                        messageFolder});
            return ((MessageFolder[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageFoldersAsync(MessageFolder messageFolder) {
            this.GetMessageFoldersAsync(messageFolder, null);
        }
        
        /// <remarks/>
        public void GetMessageFoldersAsync(MessageFolder messageFolder, object userState) {
            if ((this.GetMessageFoldersOperationCompleted == null)) {
                this.GetMessageFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageFoldersOperationCompleted);
            }
            this.InvokeAsync("GetMessageFolders", new object[] {
                        messageFolder}, this.GetMessageFoldersOperationCompleted, userState);
        }
        
        private void OnGetMessageFoldersOperationCompleted(object arg) {
            if ((this.GetMessageFoldersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageFoldersCompleted(this, new GetMessageFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/GetSpecialMessageFolderForEmployee", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageFolder GetSpecialMessageFolderForEmployee(Employee employee, MessageSpecialFolder specialFolder) {
            object[] results = this.Invoke("GetSpecialMessageFolderForEmployee", new object[] {
                        employee,
                        specialFolder});
            return ((MessageFolder)(results[0]));
        }
        
        /// <remarks/>
        public void GetSpecialMessageFolderForEmployeeAsync(Employee employee, MessageSpecialFolder specialFolder) {
            this.GetSpecialMessageFolderForEmployeeAsync(employee, specialFolder, null);
        }
        
        /// <remarks/>
        public void GetSpecialMessageFolderForEmployeeAsync(Employee employee, MessageSpecialFolder specialFolder, object userState) {
            if ((this.GetSpecialMessageFolderForEmployeeOperationCompleted == null)) {
                this.GetSpecialMessageFolderForEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpecialMessageFolderForEmployeeOperationCompleted);
            }
            this.InvokeAsync("GetSpecialMessageFolderForEmployee", new object[] {
                        employee,
                        specialFolder}, this.GetSpecialMessageFolderForEmployeeOperationCompleted, userState);
        }
        
        private void OnGetSpecialMessageFolderForEmployeeOperationCompleted(object arg) {
            if ((this.GetSpecialMessageFolderForEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpecialMessageFolderForEmployeeCompleted(this, new GetSpecialMessageFolderForEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/GetMessageFolderDetail", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageFolder GetMessageFolderDetail(MessageFolder messageFolder) {
            object[] results = this.Invoke("GetMessageFolderDetail", new object[] {
                        messageFolder});
            return ((MessageFolder)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageFolderDetailAsync(MessageFolder messageFolder) {
            this.GetMessageFolderDetailAsync(messageFolder, null);
        }
        
        /// <remarks/>
        public void GetMessageFolderDetailAsync(MessageFolder messageFolder, object userState) {
            if ((this.GetMessageFolderDetailOperationCompleted == null)) {
                this.GetMessageFolderDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageFolderDetailOperationCompleted);
            }
            this.InvokeAsync("GetMessageFolderDetail", new object[] {
                        messageFolder}, this.GetMessageFolderDetailOperationCompleted, userState);
        }
        
        private void OnGetMessageFolderDetailOperationCompleted(object arg) {
            if ((this.GetMessageFolderDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageFolderDetailCompleted(this, new GetMessageFolderDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/CreateMessageFolder", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageFolder CreateMessageFolder(MessageFolder messageFolder, MessageFolder parentMessageFolder) {
            object[] results = this.Invoke("CreateMessageFolder", new object[] {
                        messageFolder,
                        parentMessageFolder});
            return ((MessageFolder)(results[0]));
        }
        
        /// <remarks/>
        public void CreateMessageFolderAsync(MessageFolder messageFolder, MessageFolder parentMessageFolder) {
            this.CreateMessageFolderAsync(messageFolder, parentMessageFolder, null);
        }
        
        /// <remarks/>
        public void CreateMessageFolderAsync(MessageFolder messageFolder, MessageFolder parentMessageFolder, object userState) {
            if ((this.CreateMessageFolderOperationCompleted == null)) {
                this.CreateMessageFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateMessageFolderOperationCompleted);
            }
            this.InvokeAsync("CreateMessageFolder", new object[] {
                        messageFolder,
                        parentMessageFolder}, this.CreateMessageFolderOperationCompleted, userState);
        }
        
        private void OnCreateMessageFolderOperationCompleted(object arg) {
            if ((this.CreateMessageFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateMessageFolderCompleted(this, new CreateMessageFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/UpdateMessageFolder", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageFolder UpdateMessageFolder(MessageFolder messageFolder, Employee employee) {
            object[] results = this.Invoke("UpdateMessageFolder", new object[] {
                        messageFolder,
                        employee});
            return ((MessageFolder)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMessageFolderAsync(MessageFolder messageFolder, Employee employee) {
            this.UpdateMessageFolderAsync(messageFolder, employee, null);
        }
        
        /// <remarks/>
        public void UpdateMessageFolderAsync(MessageFolder messageFolder, Employee employee, object userState) {
            if ((this.UpdateMessageFolderOperationCompleted == null)) {
                this.UpdateMessageFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMessageFolderOperationCompleted);
            }
            this.InvokeAsync("UpdateMessageFolder", new object[] {
                        messageFolder,
                        employee}, this.UpdateMessageFolderOperationCompleted, userState);
        }
        
        private void OnUpdateMessageFolderOperationCompleted(object arg) {
            if ((this.UpdateMessageFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMessageFolderCompleted(this, new UpdateMessageFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/MoveMessageFolder", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MoveMessageFolder(MessageFolder messageFolder, MessageFolder newParentMessageFolder) {
            this.Invoke("MoveMessageFolder", new object[] {
                        messageFolder,
                        newParentMessageFolder});
        }
        
        /// <remarks/>
        public void MoveMessageFolderAsync(MessageFolder messageFolder, MessageFolder newParentMessageFolder) {
            this.MoveMessageFolderAsync(messageFolder, newParentMessageFolder, null);
        }
        
        /// <remarks/>
        public void MoveMessageFolderAsync(MessageFolder messageFolder, MessageFolder newParentMessageFolder, object userState) {
            if ((this.MoveMessageFolderOperationCompleted == null)) {
                this.MoveMessageFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveMessageFolderOperationCompleted);
            }
            this.InvokeAsync("MoveMessageFolder", new object[] {
                        messageFolder,
                        newParentMessageFolder}, this.MoveMessageFolderOperationCompleted, userState);
        }
        
        private void OnMoveMessageFolderOperationCompleted(object arg) {
            if ((this.MoveMessageFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveMessageFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/UpdateReadFlag", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateReadFlag(Message message, MessageFolder messageFolder) {
            this.Invoke("UpdateReadFlag", new object[] {
                        message,
                        messageFolder});
        }
        
        /// <remarks/>
        public void UpdateReadFlagAsync(Message message, MessageFolder messageFolder) {
            this.UpdateReadFlagAsync(message, messageFolder, null);
        }
        
        /// <remarks/>
        public void UpdateReadFlagAsync(Message message, MessageFolder messageFolder, object userState) {
            if ((this.UpdateReadFlagOperationCompleted == null)) {
                this.UpdateReadFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateReadFlagOperationCompleted);
            }
            this.InvokeAsync("UpdateReadFlag", new object[] {
                        message,
                        messageFolder}, this.UpdateReadFlagOperationCompleted, userState);
        }
        
        private void OnUpdateReadFlagOperationCompleted(object arg) {
            if ((this.UpdateReadFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateReadFlagCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/UpdateNewFlag", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateNewFlag(Message message, MessageFolder messageFolder) {
            this.Invoke("UpdateNewFlag", new object[] {
                        message,
                        messageFolder});
        }
        
        /// <remarks/>
        public void UpdateNewFlagAsync(Message message, MessageFolder messageFolder) {
            this.UpdateNewFlagAsync(message, messageFolder, null);
        }
        
        /// <remarks/>
        public void UpdateNewFlagAsync(Message message, MessageFolder messageFolder, object userState) {
            if ((this.UpdateNewFlagOperationCompleted == null)) {
                this.UpdateNewFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNewFlagOperationCompleted);
            }
            this.InvokeAsync("UpdateNewFlag", new object[] {
                        message,
                        messageFolder}, this.UpdateNewFlagOperationCompleted, userState);
        }
        
        private void OnUpdateNewFlagOperationCompleted(object arg) {
            if ((this.UpdateNewFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNewFlagCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SwmSuiteSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SimpleWorkfloorManagementSuiteNameSpace/DeleteMessageFolder", RequestNamespace="SimpleWorkfloorManagementSuiteNameSpace", ResponseNamespace="SimpleWorkfloorManagementSuiteNameSpace", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteMessageFolder(MessageFolder messageFolder) {
            object[] results = this.Invoke("DeleteMessageFolder", new object[] {
                        messageFolder});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMessageFolderAsync(MessageFolder messageFolder) {
            this.DeleteMessageFolderAsync(messageFolder, null);
        }
        
        /// <remarks/>
        public void DeleteMessageFolderAsync(MessageFolder messageFolder, object userState) {
            if ((this.DeleteMessageFolderOperationCompleted == null)) {
                this.DeleteMessageFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMessageFolderOperationCompleted);
            }
            this.InvokeAsync("DeleteMessageFolder", new object[] {
                        messageFolder}, this.DeleteMessageFolderOperationCompleted, userState);
        }
        
        private void OnDeleteMessageFolderOperationCompleted(object arg) {
            if ((this.DeleteMessageFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMessageFolderCompleted(this, new DeleteMessageFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SimpleWorkfloorManagementSuiteNameSpace")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="SimpleWorkfloorManagementSuiteNameSpace", IsNullable=false)]
    public partial class SwmSuiteSoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string userNameField;
        
        private string passwordField;
        
        private int employeeField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public int Employee {
            get {
                return this.employeeField;
            }
            set {
                this.employeeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmployeeSettings))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Avatar))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ZipCode))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Employee))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Message))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MessageFolder))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SwmSuite_v1")]
    public partial class BusinessObjectBase {
        
        private int sysIdField;
        
        private int rowVersionField;
        
        /// <remarks/>
        public int SysId {
            get {
                return this.sysIdField;
            }
            set {
                this.sysIdField = value;
            }
        }
        
        /// <remarks/>
        public int RowVersion {
            get {
                return this.rowVersionField;
            }
            set {
                this.rowVersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SwmSuite_v1")]
    public partial class EmployeeSettings : BusinessObjectBase {
        
        private bool autoLogonField;
        
        private string autoLogonHostField;
        
        private int logoutTimeoutField;
        
        private bool emailNotificationField;
        
        private string emailAddressField;
        
        private string smtpServerField;
        
        private System.Nullable<int> smtpPortField;
        
        private bool secureConnectionField;
        
        private bool authenticationField;
        
        private string usernameField;
        
        private string passwordField;
        
        /// <remarks/>
        public bool AutoLogon {
            get {
                return this.autoLogonField;
            }
            set {
                this.autoLogonField = value;
            }
        }
        
        /// <remarks/>
        public string AutoLogonHost {
            get {
                return this.autoLogonHostField;
            }
            set {
                this.autoLogonHostField = value;
            }
        }
        
        /// <remarks/>
        public int LogoutTimeout {
            get {
                return this.logoutTimeoutField;
            }
            set {
                this.logoutTimeoutField = value;
            }
        }
        
        /// <remarks/>
        public bool EmailNotification {
            get {
                return this.emailNotificationField;
            }
            set {
                this.emailNotificationField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string SmtpServer {
            get {
                return this.smtpServerField;
            }
            set {
                this.smtpServerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SmtpPort {
            get {
                return this.smtpPortField;
            }
            set {
                this.smtpPortField = value;
            }
        }
        
        /// <remarks/>
        public bool SecureConnection {
            get {
                return this.secureConnectionField;
            }
            set {
                this.secureConnectionField = value;
            }
        }
        
        /// <remarks/>
        public bool Authentication {
            get {
                return this.authenticationField;
            }
            set {
                this.authenticationField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SwmSuite_v1")]
    public partial class Avatar : BusinessObjectBase {
        
        private byte[] pictureField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Picture {
            get {
                return this.pictureField;
            }
            set {
                this.pictureField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SwmSuite_v1")]
    public partial class ZipCode : BusinessObjectBase {
        
        private string codeField;
        
        private string cityField;
        
        private string countryField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SwmSuite_v1")]
    public partial class Employee : BusinessObjectBase {
        
        private System.Guid userSysIdField;
        
        private string nameField;
        
        private string firstNameField;
        
        private string addressField;
        
        private ZipCode zipCodeField;
        
        private string privatePhoneNumberField;
        
        private string workPhoneNumberField;
        
        private string cellPhoneNumberField;
        
        private string emailAddress1Field;
        
        private string emailAddress2Field;
        
        private string emailAddress3Field;
        
        private string emailAddress4Field;
        
        private string emailAddress5Field;
        
        private Avatar avatarField;
        
        private EmployeeSettings settingsField;
        
        private string userNameField;
        
        private string passwordField;
        
        private bool administratorField;
        
        /// <remarks/>
        public System.Guid UserSysId {
            get {
                return this.userSysIdField;
            }
            set {
                this.userSysIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public ZipCode ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PrivatePhoneNumber {
            get {
                return this.privatePhoneNumberField;
            }
            set {
                this.privatePhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string WorkPhoneNumber {
            get {
                return this.workPhoneNumberField;
            }
            set {
                this.workPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CellPhoneNumber {
            get {
                return this.cellPhoneNumberField;
            }
            set {
                this.cellPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress1 {
            get {
                return this.emailAddress1Field;
            }
            set {
                this.emailAddress1Field = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress2 {
            get {
                return this.emailAddress2Field;
            }
            set {
                this.emailAddress2Field = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress3 {
            get {
                return this.emailAddress3Field;
            }
            set {
                this.emailAddress3Field = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress4 {
            get {
                return this.emailAddress4Field;
            }
            set {
                this.emailAddress4Field = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress5 {
            get {
                return this.emailAddress5Field;
            }
            set {
                this.emailAddress5Field = value;
            }
        }
        
        /// <remarks/>
        public Avatar Avatar {
            get {
                return this.avatarField;
            }
            set {
                this.avatarField = value;
            }
        }
        
        /// <remarks/>
        public EmployeeSettings Settings {
            get {
                return this.settingsField;
            }
            set {
                this.settingsField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public bool Administrator {
            get {
                return this.administratorField;
            }
            set {
                this.administratorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SwmSuite_v1")]
    public partial class Message : BusinessObjectBase {
        
        private System.DateTime dateField;
        
        private string subjectField;
        
        private string contentsField;
        
        private Employee senderField;
        
        private Employee[] recipientsField;
        
        private MessagePriority priorityField;
        
        private bool visibleField;
        
        private bool isReadField;
        
        private bool isNewField;
        
        private MessageFolder parentFolderField;
        
        /// <remarks/>
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public string Contents {
            get {
                return this.contentsField;
            }
            set {
                this.contentsField = value;
            }
        }
        
        /// <remarks/>
        public Employee Sender {
            get {
                return this.senderField;
            }
            set {
                this.senderField = value;
            }
        }
        
        /// <remarks/>
        public Employee[] Recipients {
            get {
                return this.recipientsField;
            }
            set {
                this.recipientsField = value;
            }
        }
        
        /// <remarks/>
        public MessagePriority Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public bool Visible {
            get {
                return this.visibleField;
            }
            set {
                this.visibleField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRead {
            get {
                return this.isReadField;
            }
            set {
                this.isReadField = value;
            }
        }
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        public MessageFolder ParentFolder {
            get {
                return this.parentFolderField;
            }
            set {
                this.parentFolderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SwmSuite_v1")]
    public enum MessagePriority {
        
        /// <remarks/>
        High,
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        Low,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SwmSuite_v1")]
    public partial class MessageFolder : BusinessObjectBase {
        
        private string nameField;
        
        private bool visibleField;
        
        private MessageSpecialFolder specialFolderField;
        
        private MessageFolder[] childFoldersField;
        
        private Message[] messagesField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool Visible {
            get {
                return this.visibleField;
            }
            set {
                this.visibleField = value;
            }
        }
        
        /// <remarks/>
        public MessageSpecialFolder SpecialFolder {
            get {
                return this.specialFolderField;
            }
            set {
                this.specialFolderField = value;
            }
        }
        
        /// <remarks/>
        public MessageFolder[] ChildFolders {
            get {
                return this.childFoldersField;
            }
            set {
                this.childFoldersField = value;
            }
        }
        
        /// <remarks/>
        public Message[] Messages {
            get {
                return this.messagesField;
            }
            set {
                this.messagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SwmSuite_v1")]
    public enum MessageSpecialFolder {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Inbox,
        
        /// <remarks/>
        Outbox,
        
        /// <remarks/>
        Archive,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetMessagesForMessageFolderCompletedEventHandler(object sender, GetMessagesForMessageFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessagesForMessageFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessagesForMessageFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Message[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Message[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void MoveMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRootMessageFoldersCompletedEventHandler(object sender, GetRootMessageFoldersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRootMessageFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRootMessageFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageFolder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageFolder[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetMessageFoldersCompletedEventHandler(object sender, GetMessageFoldersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageFolder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageFolder[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSpecialMessageFolderForEmployeeCompletedEventHandler(object sender, GetSpecialMessageFolderForEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpecialMessageFolderForEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpecialMessageFolderForEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageFolder Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageFolder)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetMessageFolderDetailCompletedEventHandler(object sender, GetMessageFolderDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageFolderDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageFolderDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageFolder Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageFolder)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateMessageFolderCompletedEventHandler(object sender, CreateMessageFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateMessageFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateMessageFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageFolder Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageFolder)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateMessageFolderCompletedEventHandler(object sender, UpdateMessageFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMessageFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMessageFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageFolder Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageFolder)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void MoveMessageFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateReadFlagCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateNewFlagCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteMessageFolderCompletedEventHandler(object sender, DeleteMessageFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMessageFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMessageFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591